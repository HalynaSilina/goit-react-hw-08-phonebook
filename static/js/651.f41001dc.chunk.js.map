{"version":3,"file":"static/js/651.f41001dc.chunk.js","mappings":"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","sources":["../node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","redux/contacts/selectors.js","pages/Contacts/Contacts.styled.jsx","components/ContactForm.jsx/ContactForm.styled.jsx","components/ContactForm.jsx/ContactForm.jsx","components/Error/Error.styled.jsx","components/Error/Error.jsx","components/Filter.jsx/Filter.styled.jsx","components/Filter.jsx/Filter.jsx","components/ContactListItem/ContactListItem.styled.jsx","components/ContactListItem/ContactListItem.jsx","components/ContactList/ContactList.styled.jsx","components/ContactList/ContactList.jsx","pages/Contacts/Contacts.jsx"],"sourcesContent":["import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose.js\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n  return target;\n}","export const getFilter = state => state.filter.filter;\nexport const getContacts = state => state.contacts.items;\nexport const getLoading = state => state.contacts.isLoading;\nexport const getError = state => state.contacts.error;\n","import styled from '@emotion/styled';\n\nexport const Container = styled.div`\n  padding: 36px;\n  margin: 0 auto;\n  @media screen and (min-width: 1024px) {\n    padding: 24px;\n    display: grid;\n    column-gap: 20px;\n    grid-template-columns: 1fr 2fr;\n    grid-auto-rows: minmax(100px, auto);\n}\n@media screen and (min-width: 1200px) {\n  max-width: 1200px;\n`;\n\nexport const Title = styled.h2`\n  margin-top: 20px;\n  font-weight: 900;\n  text-align: center;\n  font-size: 40px;\n`;\n","import styled from '@emotion/styled';\n\nexport const Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  margin: 0 auto;\n  align-items: center;\n  gap: 12px;\n  @media screen and (max-width: 375px and min-width: 425px) {\n    min-width: 300px;\n  }\n  @media screen and (max-width: 768px) {\n    max-width: 500px;\n  }\n  @media screen and (max-width: 1024px) {\n    max-width: 600px;\n  }\n  @media screen and (min-width: 1024px) {\n    margin: 0;\n    grid-column-start: 1;\n    grid-column-end: 2;\n    grid-row-start: 2;\n    grid-row-end: 4;\n  }\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  gap: 4px;\n  font-size: 18px;\n  font-weight: 500;\n  line-height: 1.14;\n`;\n\nexport const Input = styled.input`\n  padding: 8px 12px;\n  font-size: 18px;\n  line-height: 1.12;\n  font-style: italic;\n  font-weight: 300;\n  border: 2px solid #ef972c;\n  border-radius: 8px;\n  background-color: #e6f4f1;\n`;\n\nexport const Button = styled.button`\n  display: inline-block;\n  min-width: 150px;\n  margin-top: 24px;\n  padding: 8px 10px;\n  border: 2px solid #b69905;\n  border-radius: 8px;\n  background-color: #ef972c;\n  font-size: 18px;\n  font-weight: 500;\n  cursor: pointer;\n  transition: transform 300ms linear, background-image 300ms linear 300ms,\n    border-color 300ms linear 300ms;\n  background-size: 200% auto;\n  background-image: linear-gradient(\n    45deg,\n    #F9F871 0%,\n    #ef972c 51%,\n    #F9F871 100%\n  );\n  :hover,\n  :focus {\n    background-position: right center;\n    transform: scale(1.1);\n    border-color: #F9F871;\n  }\n  :active {\n    transform: scale(0.95);\n  }\n`;\n","import React, { useState } from 'react';\nimport { toast } from 'react-toastify';\nimport { Form, Label, Input, Button } from './ContactForm.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from 'redux/contacts/contactsThunks';\nimport { getContacts } from 'redux/contacts/selectors';\n\nconst ContactForm = () => {\n  const [userName, setUserName] = useState('');\n  const [userNumber, setUserNumber] = useState('');\n  const dispatch = useDispatch();\n  const contacts = useSelector(getContacts);\n  const handleInputChange = ({ target: { name, value } }) => {\n    const normalizedValue = value.toLowerCase();\n    if (name === 'userNumber')\n      if (contacts.some(contact => contact.number === value))\n        toast.error(`Number ${value} is also in contacts`, {\n          position: 'top-left',\n          autoClose: 2000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined,\n          theme: 'colored',\n        });\n      else setUserNumber(value);\n    if (name === 'userName')\n      if (\n        contacts.some(contact => contact.name.toLowerCase() === normalizedValue)\n      )\n        toast.error(`${value} also in your list`, {\n          position: 'top-left',\n          autoClose: 2000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined,\n          theme: 'colored',\n        });\n      else setUserName(value);\n  };\n\n  const reset = () => {\n    setUserName('');\n    setUserNumber('');\n  };\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n    dispatch(addContact({ name: userName, number: userNumber }));\n    reset();\n  };\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <Label>\n        Name\n        <Input\n          type=\"text\"\n          name=\"userName\"\n          value={userName}\n          onChange={handleInputChange}\n          pattern=\"^[A-Za-z\\u0080-\\uFFFF ']+$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n      </Label>\n      <Label>\n        Number\n        <Input\n          type=\"tel\"\n          name=\"userNumber\"\n          value={userNumber}\n          onChange={handleInputChange}\n          pattern=\"^(\\+?[0-9.\\(\\)\\-\\s]*)$\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n      </Label>\n      <Button type=\"submit\">Add contact</Button>\n    </Form>\n  );\n};\n\nexport default ContactForm;\n","import styled from '@emotion/styled';\n\nexport const ErrorMessage = styled.p`\n  margin-top: 20px;\n  font-weight: 900;\n  text-align: center;\n  font-size: 40px;\n  color: red;\n`;\n","import React from \"react\";\nimport { ErrorMessage } from \"./Error.styled\";\n\nconst Error = () => {\n    return <ErrorMessage>Ooops...something going wrong!</ErrorMessage>\n}\nexport default Error;","import styled from '@emotion/styled';\n\nexport const SearchLabel = styled.label`\n  display: flex;\n  flex-direction: column;\n  font-size: 18px;\n  font-weight: 500;\n`;\n\nexport const SearchInput = styled.input`\n  margin-top: 4px;\n  padding: 8px 12px;\n  font-size: 18px;\n  line-height: 1.12;\n  font-style: italic;\n  font-weight: 300;\n  border-radius: 8px;\n  border: 2px solid #ef972c;\n  background-color: #fcfcd4;\n`;\n","import React from 'react';\nimport { SearchLabel, SearchInput } from './Filter.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getFilter } from 'redux/contacts/selectors';\nimport { setFilter } from 'redux/contacts/filterSlice';\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n  const filterValue = useSelector(getFilter);\n  const handleFilterChange = ({ target: { value } }) => {\n    dispatch(setFilter(value));\n  };\n  return (\n    <SearchLabel>\n      Find contacts by name\n      <SearchInput\n        type=\"text\"\n        name=\"filter\"\n        value={filterValue.filter}\n        onChange={handleFilterChange}\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        required\n      />\n    </SearchLabel>\n  );\n};\n\nexport default Filter;\n","import styled from '@emotion/styled';\n\nexport const Item = styled.li`\n  display: flex;\n  gap: 8px;\n  align-items: baseline;\n  justify-content: space-between;\n`;\nexport const Contact = styled.p`\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n`;\n\nexport const Button = styled.button`\n  border-radius: 8px;\n  border: 2px solid #ef972c;\n  background-color: #ef972c;\n  cursor: pointer;\n  transition: transform 300ms linear, background-image 300ms linear 300ms,\n    border-color 300ms linear 300ms;\n  background-size: 200% auto;\n  background-image: linear-gradient(\n    30deg,\n    #f51212 0%,\n    #f09819 51%,\n    #f51212 100%\n  );\n  :hover,\n  :focus {\n    background-position: right center;\n    transform: scale(1.1);\n    border-color: #f51212;\n  }\n  :active {\n    transform: scale(0.95);\n  }\n`;\n","import React from 'react';\nimport { Item, Button, Contact } from './ContactListItem.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getContacts, getFilter } from 'redux/contacts/selectors';\nimport { deleteContact } from 'redux/contacts/contactsThunks';\n\nconst ContactListItem = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(getContacts);\n  const filter = useSelector(getFilter);\n\n  const filterByName = filter => {\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter)\n    );\n  };\n\n  const normalizedFilter = filter.toLowerCase();\n  const filtredContacts = filterByName(normalizedFilter);\n\n  return filtredContacts.map(({ id, name, number }) => {\n    return (\n      <Item key={id}>\n        <Contact>\n          {name}: {number}\n        </Contact>\n        <Button type=\"button\" onClick={() => dispatch(deleteContact(id))}>\n          Delete\n        </Button>\n      </Item>\n    );\n  });\n};\n\nexport default ContactListItem;\n","import styled from '@emotion/styled';\n\nexport const List = styled.ul`\n  max-height: 60vh;\n  margin-top: 12px;\n  padding: 8px 12px;\n  list-style: none;\n  background-color: #fff;\n  background-image: repeating-linear-gradient(\n    to bottom,\n    #e6f4f1,\n    #e6f4f1 20px,\n    #fcfcd4 20px,\n    #fcfcd4 50px\n  );\n  border-radius: 8px;\n  border: 2px solid #ef972c;\n  overflow-y: scroll;\n  @media screen and (min-width: 1024px) {\n    margin-top: 0;\n    min-height: 200px;\n  }\n`;\n","import React from 'react';\nimport ContactListItem from 'components/ContactListItem/ContactListItem';\nimport { List } from './ContactList.styled';\n\nconst ContactList = () => {\n  return (\n    <List>\n      <ContactListItem />\n    </List>\n  );\n};\n\nexport default ContactList;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { useEffect } from 'react';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { ToastContainer } from 'react-toastify';\nimport { getContacts, getError, getLoading } from 'redux/contacts/selectors';\nimport { fetchContacts } from 'redux/contacts/contactsThunks';\nimport { Container, Title } from './Contacts.styled';\nimport ContactForm from 'components/ContactForm.jsx/ContactForm';\nimport Loader from 'components/Loader/Loader';\nimport Error from 'components/Error/Error';\nimport Filter from 'components/Filter.jsx/Filter';\nimport ContactList from 'components/ContactList/ContactList';\n\nconst Contacts = () => {\n  const contacts = useSelector(getContacts);\n  const isLoading = useSelector(getLoading);\n  const error = useSelector(getError);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n  return (\n    <Container>\n      <Title>Contacts</Title>\n      <ContactForm />\n      {isLoading && !error && <Loader />}\n      {error && <Error />}\n      {contacts.length !== 0 && (\n        <>\n          <Filter />\n          {!isLoading && <ContactList />}\n        </>\n      )}\n      <ToastContainer />\n    </Container>\n  );\n};\n\nexport default Contacts;\n"],"names":["_objectWithoutProperties","source","excluded","key","i","target","objectWithoutPropertiesLoose","Object","getOwnPropertySymbols","sourceSymbolKeys","length","indexOf","prototype","propertyIsEnumerable","call","getFilter","state","filter","getContacts","contacts","items","getLoading","isLoading","getError","error","Container","styled","Title","Form","Label","Input","Button","useState","userName","setUserName","userNumber","setUserNumber","dispatch","useDispatch","useSelector","handleInputChange","name","value","normalizedValue","toLowerCase","some","contact","number","toast","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","theme","onSubmit","evt","preventDefault","addContact","type","onChange","pattern","title","required","ErrorMessage","SearchLabel","SearchInput","filterValue","setFilter","Item","Contact","filtredContacts","includes","filterByName","map","id","onClick","deleteContact","List","useEffect","fetchContacts","Loader"],"sourceRoot":""}